package com.ltm.runningtracker.database.model;

import static com.ltm.runningtracker.android.contentprovider.DroidProviderContract.HEIGHT_COL;
import static com.ltm.runningtracker.android.contentprovider.DroidProviderContract.ID_COL;
import static com.ltm.runningtracker.android.contentprovider.DroidProviderContract.NAME_COL;
import static com.ltm.runningtracker.android.contentprovider.DroidProviderContract.WEIGHT_COL;

import android.database.Cursor;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;
import com.ltm.runningtracker.database.model.Run.Builder;
import java.io.Serializable;

@Entity
public class User implements Serializable {

  @PrimaryKey
  public int _id;

  @ColumnInfo(name = "name")
  public String name;

  @ColumnInfo(name = "weight")
  public int weight;

  @ColumnInfo(name = "height")
  public int height;

  /**
   * Used by Room
   *
   * @see #fromCursorToUser(Cursor, int)
   */
  public User(int _id, String name, int weight, int height) {
    this._id = _id;
    this.name = name;
    this.weight = weight;
    this.height = height;
  }

  // Used by builder pattern - requires empty private constructor
  @Ignore
  private User() {
  }

  /**
   * Builder pattern required as described in {@link Run}
   */
  public static class Builder {

    private Integer _id;
    private String name;
    private int weight;
    private int height;

    /**
     * Minimum required information
     */
    public Builder(String name) {
      this.name = name;
    }

    // If run is being retrieved, need to insert id so that it dosen't get autogenerated
    public User.Builder withId(int _id) {
      this._id = _id;
      return this;
    }

    public User.Builder withWeight(int weight) {
      this.weight = weight;
      return this;
    }

    public User.Builder withHeight(int height) {
      this.height = height;
      return this;
    }

    public User build() {
      User user = new User();
      if(this._id != null) {
        user._id = _id;
      }
      user.name = this.name;
      user.weight = this.weight;
      user.height = this.height;

      return user;
    }
  }

  /**
   * Type conversion utility method to return Model Object rather than Cursor Keeps database schema
   * changes from breaking Activity implementations.
   */
  @Ignore
  public static User fromCursorToUser(Cursor cursor, int position) {
    // Use in repos and listadapter

    User user = null;

    if(cursor.moveToPosition(position)) {
      int _id = cursor.getInt(ID_COL);
      String name = cursor.getString(NAME_COL);
      int weight = cursor.getInt(WEIGHT_COL);
      int height = cursor.getInt(HEIGHT_COL);

      user = new User.Builder(name).withId(_id).withWeight(weight).withHeight(height).build();
    }

    return user;
  }

}
